#version 130


uniform vec3 light0_position;
uniform vec3 diffuse_color;
uniform vec3 ambient_color;
uniform vec3 specular_color;
uniform float specular_exp;
uniform float alpha;

in vec3 v;
in vec3 N;

out vec4 out_color;

void main() {
	vec3 L = normalize(light0_position - v);
	vec3 E = normalize(-v);
	vec3 R = normalize(-reflect(L,N));

	vec3 diffuse = diffuse_color * max(dot(N,L), 0.0);
	vec3 specular = specular_color * pow(max(dot(R,E),0.0),specular_exp);

	out_color.a = alpha;
	out_color.rgb = clamp(diffuse + ambient_color + specular,0.0,1.0);
}

